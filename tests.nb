Print["\n\n ROW UTILITIES"];

Print["\n extractGcd"];
extractGcd[{0, -6, 9}] == {0, -2, 3}
Print["\n pivot"];
pivot[{0, -6, 9}] == -6


Print["\n\n MATRIX UTILITIES"];

Print["\n reverseRows"];
reverseRows[{{1, 0, -4}, {0, 1, 4}}] == {{-4, 0, 1}, {4, 1, 0}}

Print["\n antiTranspose"];
antiTranspose[{{1, 0, -4}, {0, 1, 4}}] == {{4, -4}, {1, 0}, {0, 1}}

Print["\n firstPivot"];
firstPivot[{{0, 0}, {0, 0}}] == 0
firstPivot[{{0, 2}, {3, 0}}] == 2
firstPivot[{{0, 0}, {3, 0}}] == 3

Print["\n isAllZeroMatrix"];
isAllZeroMatrix[{{0, 0}, {0, 0}}] == True
isAllZeroMatrix[{{0, 0}, {0, 3}}] == False

Print["\n removeAllZeroRows"];
removeAllZeroRows[{{1, 0, 0}, {0, 0, 0}, {1, 2, 3}}] == {{1, 0, 0}, {1, 2, 3}}
removeAllZeroRows[{{1, 0, 1}, {0, 0, 2}, {0, 0, 3}}] == {{1, 0, 1}, {0, 0, 2}, {0, 0, 3}}
removeAllZeroRows[{{12, 19, 28}, {24, 38, 56}}] == {{12, 19, 28}, {24, 38, 56}}

Print["\n removeAllZeroCols"];
removeAllZeroCols[{{1, 0, 0}, {0, 0, 0}, {1, 2, 3}}] == {{1, 0, 0}, {0, 0, 0}, {1, 2, 3}}
removeAllZeroCols[{{1, 0, 1}, {0, 0, 2}, {0, 0, 3}}] == {{1, 1}, {0, 2}, {0, 3}}
removeAllZeroCols[{{12, 24}, {19, 38}, {28, 56}}] == {{12, 24}, {19, 38}, {28, 56}}

Print["\n rowCount"];
rowCount[{{0, 0}, {0, 0}}] == 2
rowCount[{{0}, {0}}] == 2
rowCount[{{0, 0}}] == 1

Print["\n colCount"];
colCount[{{0, 0}, {0, 0}}] == 2
colCount[{{0}, {0}}] == 1
colCount[{{0, 0}}] == 2

Print["\n cellCount"];
cellCount[{{0, 0}, {0, 0}}] == 4
cellCount[{{0}, {0}}] == 2
cellCount[{{0, 0}}] == 2

Print["\n isSquare"];
isSquare[{{0, 0}, {0, 0}}] == True
isSquare[{{0}, {0}}] == False
isSquare[{{0, 0}}] == False

Print["\n isTall"];
isTall[{{0, 0}, {0, 0}}] == False
isTall[{{0}, {0}}] == True
isTall[{{0, 0}}] == False

Print["\n isFat"];
isFat[{{0, 0}, {0, 0}}] == False
isFat[{{0}, {0}}] == False
isFat[{{0, 0}}] == True


Print["\n\n MAPPING & COMMA-BASIS UTILITIES"];

Print["\n removeDimensionalityDeficienciesFromMapping"];
removeDimensionalityDeficienciesFromMapping[{{1, 0, -4, 0}, {0, 1, 4, 0}}] == {{1, 0, -4}, {0, 1, 4}}
removeDimensionalityDeficienciesFromMapping[{{0, 1, 0, -4}, {0, 0, 1, 4}}] == {{0, 1, 0, -4}, {0, 0, 1, 4}}

Print["\n removeRankDeficientRows"];
removeRankDeficientRows[{{1, 0, 0}, {0, 0, 0}, {1, 2, 3}}] == {{1, 0, 0}, {0, 2, 3}}
removeRankDeficientRows[{{12, 19, 28}, {24, 38, 56}}] == {{12, 19, 28}}

Print["\n removeNullityDeficientCols"];
removeNullityDeficientCols[{{1, 0, 1}, {0, 0, 2}, {0, 0, 3}}] == {{1, 0}, {0, 2}, {0, 3}}
removeNullityDeficientCols[{{12, 24}, {19, 38}, {28, 56}}] == {{12}, {19}, {28}}

Print["\n removeDeficiencies"];
removeDeficiencies[{{1, 0, 0}, {0, 0, 0}, {1, 2, 3}}] == {{1, 0, 0}, {0, 2, 3}}
removeDeficiencies[{{12, 19, 28}, {24, 38, 56}}] == {{12, 19, 28}}
removeDeficiencies[{{1, 0, 1}, {0, 0, 2}, {0, 0, 3}}] == {{1, 0}, {0, 2}, {0, 3}}
removeDeficiencies[{{12, 24}, {19, 38}, {28, 56}}] == {{12}, {19}, {28}}
removeDeficiencies[{{1, 0, -4}, {0, 1, 4}}] == {{1, 0, -4}, {0, 1, 4}}
removeDeficiencies[{{4}, {-4}, {1}, {0}}] == {{4}, {-4}, {1}}
removeDeficiencies[{{0}, {3}, {-2}}] == {{0}, {3}, {-2}}
removeDeficiencies[{}] == {}
removeDeficiencies[{{0}}] == {}
removeDeficiencies[{{0, 0}}] == {}
removeDeficiencies[{{0}, {0}}] == {}
removeDeficiencies[{{-19}, {12}}] == {{-19}, {12}}
removeDeficiencies[{{0}, {-3}, {2}}] == {{0}, {-3}, {2}}
removeDeficiencies[{{-15, -25, 1}, {8, 14, -5}, {1, 0, 0}, {0, 1, 0}, {0, 0, 2}}] == {{-15, -25, 1}, {8, 14, -5}, {1, 0, 0}, {0, 1, 0}, {0, 0, 2}}

Print["\n isCommaBasis"];
isCommaBasis[{{1, 0, -4}, {0, 1, 4}}] == False
isCommaBasis[{{1, 2}, {3, 4}, {5, 6}}] == True
isCommaBasis[{{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}] == True
isCommaBasis[{{1, 2}, {0, 0}, {0, 0}}] == False
isCommaBasis[{{1, 0, 0}, {2, 0, 0}}] == True

Print["\n isMapping"];
isMapping[{{1, 0, -4}, {0, 1, 4}}] == True
isMapping[{{1, 2}, {3, 4}, {5, 6}}] == False
isMapping[{{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}] == True
isMapping[{{1, 2}, {0, 0}, {0, 0}}] == True
isMapping[{{1, 0, 0}, {2, 0, 0}}] == False

Print["\n dimensionality"];
dimensionality[{}] == Error
dimensionality[{{0}}] == Error
dimensionality[{{0, 0}}] == Error
dimensionality[{{0}, {0}}] == Error
dimensionality[{{1, 0, -4}, {0, 1, 4}}] == 3
dimensionality[{{4}, {-4}, {1}}] == 3
dimensionality[{{1, 0, -4, 0}, {0, 1, 4, 0}}] == 3
dimensionality[{{4}, {-4}, {1}, {0}}] == 3
dimensionality[{{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}] == 3

Print["\n rank"];
rank[{}] == Error
rank[{{0}}] == Error
rank[{{0, 0}}] == Error
rank[{{0}, {0}}] == Error
rank[{{1, 0, -4}, {0, 1, 4}}] == 2
rank[{{4}, {-4}, {1}}] == 2
rank[{{1, 0, -4, 0}, {0, 1, 4, 0}}] == 2
rank[{{4}, {-4}, {1}, {0}}] == 2
rank[{{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}] == 3

Print["\n nullity"];
nullity[{}] == Error
nullity[{{0}}] == Error
nullity[{{0, 0}}] == Error
nullity[{{0}, {0}}] == Error
nullity[{{1, 0, -4}, {0, 1, 4}}] == 1
nullity[{{4}, {-4}, {1}}] == 1
nullity[{{1, 0, -4, 0}, {0, 1, 4, 0}}] == 1
nullity[{{4}, {-4}, {1}, {0}}] == 1
nullity[{{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}] == 3


Print["\n\n MATRIX FORMS & DEFACTORING"];

Print["\n canonicalForm"];
canonicalForm[{{12, 19}, {0, 0}, {0, 0}}] == {{12, 19}}
canonicalForm[{{1, 1, 0}, {0, 1, 4}}] == {{1, 0, -4}, {0, 1, 4}}
canonicalForm[{{12, 19, 28}}] == {{12, 19, 28}}
canonicalForm[{{7, 11, 16}, {22, 35, 51}}] == {{1, 2, 3}, {0, 3, 5}}
canonicalForm[{{3, 0, -1}, {0, 3, 5}}] == {{1, 2, 3}, {0, 3, 5}}
canonicalForm[{{1, 2, 3}, {0, 3, 5}}] == {{1, 2, 3}, {0, 3, 5}}
canonicalForm[{{0, 1, 4, 10}, {1, 0, -4, -13}}] == {{1, 0, -4, -13}, {0, 1, 4, 10}}
canonicalForm[{{10, 13, 12, 0}, {-1, -1, 0, 3}}] == {{1, 0, -4, -13}, {0, 1, 4, 10}}
canonicalForm[{{5, 8, 0}, {0, 0, 1}}] == {{5, 8, 0}, {0, 0, 1}}
canonicalForm[{{2, 0, 11, 12}, {0, 1, -2, -2}}] == {{2, 0, 11, 12}, {0, 1, -2, -2}}
canonicalForm[{{1, 0, 0, -5}, {0, 1, 0, 2}, {0, 0, 1, 2}}] == {{1, 0, 0, -5}, {0, 1, 0, 2}, {0, 0, 1, 2}}
canonicalForm[{{1, 0, 0, -5, 12}, {0, 1, 0, 2, -1}, {0, 0, 1, 2, -3}}] == {{1, 0, 0, -5, 12}, {0, 1, 0, 2, -1}, {0, 0, 1, 2, -3}}
canonicalForm[{{12, 19, 28}, {26, 43, 60}}] == {{1, 8, 0}, {0, 11, -4}}
canonicalForm[{{17, 16, -4}, {4, -4, 1}}] == {{1, 0, 0}, {0, 4, -1}}
canonicalForm[{{6, 5, -4}, {4, -4, 1}}] == {{2, 1, -1}, {0, 2, -1}}
canonicalForm[{{12, 19, 28}, {0, 0, 0}}] == {{12, 19, 28}}
canonicalForm[{{1, 0, 0, -5}, {0, 1, 0, 2}, {1, 1, 0, -3}}] == {{1, 0, 0, -5}, {0, 1, 0, 2}}
canonicalForm[{{0, 0}}] == {}
canonicalForm[{}] == {}
canonicalForm[ {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}] == {{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}
canonicalForm[{{12, 19, 28, 0}}] == {{12, 19, 28}}


Print["\n\n DUAL"];

Print["\n nullSpaceBasis"];
nullSpaceBasis[{{1, 0, -4}, {0, 1, 4}}] == {{4}, {-4}, {1}}
nullSpaceBasis[{}, 1] == IdentityMatrix[1]
nullSpaceBasis[{}, 2] == IdentityMatrix[2]
nullSpaceBasis[{}, 3] == IdentityMatrix[3]

Print["\n antiNullSpaceBasis"];
antiNullSpaceBasis[ {{4}, {-4}, {1}}] == {{1, 0, -4}, {0, 1, 4}}
antiNullSpaceBasis[{}, 1] == IdentityMatrix[1]
antiNullSpaceBasis[{}, 2] == IdentityMatrix[2]
antiNullSpaceBasis[{}, 3] == IdentityMatrix[3]

Print["\n dual"];
verifyDuals[m_, c_, debug_ : False] := Module[{dualM, dualC, workingM, workingC},
  workingC = removeDeficiencies[c];
  workingM = removeDeficiencies[m];

  dualC = If[workingM == {}, dual[workingM, dimensionality[c]] , dual[workingM]];
  dualM = If[workingC == {}, dual[workingC, dimensionality[m]], dual[workingC]];

  If[debug == True, Print["dualC: ", dualC, " workingC: ", workingC, " dualM: ", dualM, " workingM: ", workingM]];

  dualC == canonicalForm[workingC] && dualM == canonicalForm[workingM]
];

verifyDuals[{{1, 0, -4}, {0, 1, 4}}, {{4}, {-4}, {1}}]
verifyDuals[{{1, 0, 0}, {0, 1, 0}, {0, 0, 1}}, {}]
verifyDuals[{{0}}, {{1}}]
verifyDuals[{{0, 0}}, {{1, 0}, {0, 1}}]
verifyDuals[{{0}, {0}}, {{1, 0}, {0, 1}}]
verifyDuals[{{12, 19}}, {{-19}, {12}}]
